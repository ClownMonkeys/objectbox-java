apply plugin: 'java'
apply plugin: 'kotlin'

uploadArchives.enabled = false

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

repositories {
    // Native lib might be deployed only in internal repo
    if (project.hasProperty('internalObjectBoxRepo')) {
        println("Using internal ObjectBox repository $internalObjectBoxRepo.")
        maven {
            credentials {
                username project.property('internalObjectBoxRepoUser')
                password project.property('internalObjectBoxRepoPassword')
            }
            url internalObjectBoxRepo
        }
    } else {
        println "Warning: internalObjectBoxRepo, internalObjectBoxRepoUser and internalObjectBoxRepoPassword missing from gradle.properties."
    }
}

dependencies {
    compile project(':objectbox-java')
    compile project(':objectbox-kotlin')
    compile 'org.greenrobot:essentials:3.0.0-RC1'

    // Check flag to use locally compiled version to avoid dependency cycles
    if (!project.hasProperty('noObjectBoxTestDepencies') || !noObjectBoxTestDepencies) {
        println "Using $objectboxNativeDependency"
        compile "$objectboxNativeDependency"
    } else {
        println "Did NOT add native dependency"
    }

    testCompile "junit:junit:$junit_version"
}

test {
    // This is pretty useless now because it floods console with warnings about internal Java classes
    // However we might check from time to time, also with Java 9.
    // jvmArgs '-Xcheck:jni'

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
        displayGranularity = 2
        events 'started', 'passed'
    }
}